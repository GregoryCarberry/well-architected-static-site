name: deploy
on:
  push:
    branches: [ "main" ]
    paths:
      - "site/**"
      - "terraform/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch: {} # manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5


            # REMOVE the old "Setup Terraform" + "Get outputs" steps

      - name: Resolve bucket & distribution without Terraform
        id: res
        run: |
          PROJECT_NAME="wa-static-site"     # must match var.project_name
          ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
          BUCKET="${PROJECT_NAME}-site-${ACCOUNT}"

          # Find the CloudFront distribution by the comment we set in Terraform
          DISTID=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[?Comment=='${PROJECT_NAME} distribution'].Id | [0]" \
            --output text)

          echo "bucket=$BUCKET"   >> $GITHUB_OUTPUT
          echo "distid=$DISTID"   >> $GITHUB_OUTPUT


      - name: Sync site to S3
        run: |
          aws s3 sync site "s3://${{ steps.res.outputs.bucket }}/" --delete --only-show-errors

      - name: Invalidate CloudFront cache
        if: ${{ steps.res.outputs.distid != '' && steps.res.outputs.distid != 'None' }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ steps.res.outputs.distid }}" \
            --paths "/*"


      
