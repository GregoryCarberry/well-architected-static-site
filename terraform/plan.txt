
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place
  - destroy

Terraform will perform the following actions:

  # module.ci_github.aws_iam_policy.gh_actions_policy will be destroyed
  # (because aws_iam_policy.gh_actions_policy is not in configuration)
  - resource "aws_iam_policy" "gh_actions_policy" {
      - arn              = "arn:aws:iam::412717960006:policy/wa-static-site-gh-deploy-policy" -> null
      - attachment_count = 1 -> null
      - id               = "arn:aws:iam::412717960006:policy/wa-static-site-gh-deploy-policy" -> null
      - name             = "wa-static-site-gh-deploy-policy" -> null
      - path             = "/" -> null
      - policy           = jsonencode(
            {
              - Statement = [
                  - {
                      - Action   = [
                          - "s3:PutObject",
                          - "s3:ListBucket",
                          - "s3:GetObject",
                          - "s3:DeleteObject",
                        ]
                      - Effect   = "Allow"
                      - Resource = "*"
                      - Sid      = "S3ReadListWrite"
                    },
                  - {
                      - Action   = [
                          - "cloudfront:ListDistributions",
                          - "cloudfront:GetInvalidation",
                          - "cloudfront:CreateInvalidation",
                        ]
                      - Effect   = "Allow"
                      - Resource = "*"
                      - Sid      = "CloudFrontInvalidate"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - policy_id        = "ANPAWAF7IJNDNP5VW7W4B" -> null
      - tags             = {} -> null
      - tags_all         = {} -> null
        # (2 unchanged attributes hidden)
    }

  # module.ci_github.aws_iam_policy.gh_deploy_policy will be created
  + resource "aws_iam_policy" "gh_deploy_policy" {
      + arn              = (known after apply)
      + attachment_count = (known after apply)
      + id               = (known after apply)
      + name             = "wa-static-site-gh-deploy-policy"
      + name_prefix      = (known after apply)
      + path             = "/"
      + policy           = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "s3:PutObjectAcl",
                          + "s3:PutObject",
                          + "s3:ListBucket",
                          + "s3:GetObject",
                          + "s3:DeleteObject",
                        ]
                      + Effect   = "Allow"
                      + Resource = "*"
                      + Sid      = "S3Deploy"
                    },
                  + {
                      + Action   = "cloudfront:CreateInvalidation"
                      + Effect   = "Allow"
                      + Resource = "*"
                      + Sid      = "CloudFrontInvalidate"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + policy_id        = (known after apply)
      + tags_all         = (known after apply)
    }

  # module.ci_github.aws_iam_role.gh_actions_deploy will be updated in-place
  ~ resource "aws_iam_role" "gh_actions_deploy" {
      ~ assume_role_policy    = jsonencode(
          ~ {
              ~ Statement = [
                  ~ {
                      ~ Condition = {
                          ~ StringEquals = {
                              + "token.actions.githubusercontent.com:sub" = "repo:well-architected-static-site:ref:refs/heads/main"
                                # (1 unchanged attribute hidden)
                            }
                          - StringLike   = {
                              - "token.actions.githubusercontent.com:sub" = "repo:well-architected-static-site:*"
                            }
                        }
                        # (3 unchanged attributes hidden)
                    },
                ]
                # (1 unchanged attribute hidden)
            }
        )
      + description           = "GitHub Actions deploy role for wa-static-site via OIDC"
        id                    = "wa-static-site-gh-deploy"
        name                  = "wa-static-site-gh-deploy"
        tags                  = {
            "Env"     = "prod"
            "Owner"   = "Gregory John Carberry"
            "Project" = "wa-static-site"
        }
        # (10 unchanged attributes hidden)
    }

  # module.ci_github.aws_iam_role_policy_attachment.gh_actions_attach will be destroyed
  # (because aws_iam_role_policy_attachment.gh_actions_attach is not in configuration)
  - resource "aws_iam_role_policy_attachment" "gh_actions_attach" {
      - id         = "wa-static-site-gh-deploy/arn:aws:iam::412717960006:policy/wa-static-site-gh-deploy-policy" -> null
      - policy_arn = "arn:aws:iam::412717960006:policy/wa-static-site-gh-deploy-policy" -> null
      - role       = "wa-static-site-gh-deploy" -> null
    }

  # module.ci_github.aws_iam_role_policy_attachment.gh_deploy_attach will be created
  + resource "aws_iam_role_policy_attachment" "gh_deploy_attach" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = "wa-static-site-gh-deploy"
    }

Plan: 2 to add, 1 to change, 2 to destroy.
